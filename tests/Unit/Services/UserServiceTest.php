<?php

namespace Tests\Unit\Services;

use App\Models\User;
use App\Services\UserService;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Validation\ValidationException;
use Tests\TestCase;

class UserServiceTest extends TestCase
{
    use DatabaseTransactions;

    private UserService $service;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->service = new UserService();
        $this->withoutExceptionHandling();
    }

    /**
     * @throws ValidationException
     */
    public function testCreat()
    {
        $data =  [
            'name' => fake()->name(),
            'email' => fake()->email(),
        ];
        $this->service->createUser($data);
        $this->assertDatabaseHas('users', $data);
    }


    /**
     * @throws ValidationException
     */
    public function testUpdate()
    {
        $data =  [
            'name' => fake()->name(),
            'email' => fake()->email(),
        ];

        $user = User::factory(1)->create($data)->first();

        $newData = [
            'name' => fake()->name(),
            'email' => fake()->email(),
        ];

        $result = $this->service->updateUser($user->id, $newData);
        $this->assertTrue($result);
        $this->assertDatabaseHas('users', $newData);

    }

    public function testDelete()
    {
        $data =  [
            'name' => fake()->name(),
            'email' => fake()->email(),
        ];

        $user = User::factory(1)->create($data)->first();
        $result = $this->service->deleteUser($user->id);
        $this->assertTrue($result);
        $this->assertDatabaseMissing('users', $data);
    }

}
